[{"D:\\Documents\\Git\\triplehadmin\\src\\index.js":"1","D:\\Documents\\Git\\triplehadmin\\src\\App.js":"2","D:\\Documents\\Git\\triplehadmin\\src\\reportWebVitals.js":"3","D:\\Documents\\Git\\triplehadmin\\src\\ScrollToTop.js":"4","D:\\Documents\\Git\\triplehadmin\\src\\Routes.js":"5","D:\\Documents\\Git\\triplehadmin\\src\\PrivateRoute.js":"6","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Posts.js":"7","D:\\Documents\\Git\\triplehadmin\\src\\pages\\CreatePost.js":"8","D:\\Documents\\Git\\triplehadmin\\src\\pages\\CreateCategory.js":"9","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Categories.js":"10","D:\\Documents\\Git\\triplehadmin\\src\\pages\\EditCategory.js":"11","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Login.js":"12","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Home.js":"13","D:\\Documents\\Git\\triplehadmin\\src\\pages\\EditPost.js":"14","D:\\Documents\\Git\\triplehadmin\\src\\ApiBaseURL.js":"15","D:\\Documents\\Git\\triplehadmin\\src\\HandleUser.js":"16","D:\\Documents\\Git\\triplehadmin\\src\\components\\Footer.js":"17","D:\\Documents\\Git\\triplehadmin\\src\\components\\Header.js":"18","D:\\Documents\\Git\\triplehadmin\\src\\components\\Sidebar.js":"19","D:\\Documents\\Git\\triplehadmin\\src\\CustomLink.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":276,"mtime":1608880151094,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":256,"mtime":1608850238034,"results":"25","hashOfConfig":"22"},{"size":1245,"mtime":1609008246146,"results":"26","hashOfConfig":"22"},{"size":635,"mtime":1608801261289,"results":"27","hashOfConfig":"22"},{"size":5623,"mtime":1608974607810,"results":"28","hashOfConfig":"22"},{"size":15002,"mtime":1609014031862,"results":"29","hashOfConfig":"22"},{"size":5949,"mtime":1608895209352,"results":"30","hashOfConfig":"22"},{"size":4467,"mtime":1609009593297,"results":"31","hashOfConfig":"22"},{"size":7814,"mtime":1609052507658,"results":"32","hashOfConfig":"22"},{"size":5680,"mtime":1608999756375,"results":"33","hashOfConfig":"22"},{"size":9913,"mtime":1609007691362,"results":"34","hashOfConfig":"22"},{"size":15148,"mtime":1609008101179,"results":"35","hashOfConfig":"22"},{"size":130,"mtime":1608837539715,"results":"36","hashOfConfig":"22"},{"size":1398,"mtime":1608965217864,"results":"37","hashOfConfig":"22"},{"size":410,"mtime":1608276893425,"results":"38","hashOfConfig":"22"},{"size":12282,"mtime":1609007684974,"results":"39","hashOfConfig":"22"},{"size":1375,"mtime":1609008276839,"results":"40","hashOfConfig":"22"},{"size":376,"mtime":1608707559719,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"g25997",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Documents\\Git\\triplehadmin\\src\\index.js",[],["92","93"],"D:\\Documents\\Git\\triplehadmin\\src\\App.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\reportWebVitals.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\ScrollToTop.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\Routes.js",["94","95"],"import React from 'react';\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport Home from './pages/Home';\r\n// import NotFound from \"./pages/NotFound\";\r\nimport Login from './pages/Login';\r\nimport Categories from './pages/Categories';\r\nimport Posts from './pages/Posts';\r\nimport CreateCategory from './pages/CreateCategory';\r\nimport CreatePost from './pages/CreatePost';\r\nimport EditCategory from './pages/EditCategory';\r\nimport EditPost from './pages/EditPost';\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute exact path='/' component={Home} />\r\n      {/* <PrivateRoute path=\"/loi-404\" component={Error}> */}\r\n      <Route path='/dang-nhap'>\r\n        <Login />\r\n      </Route>\r\n      <PrivateRoute path='/the-loai/chinh-sua/:slug' component={EditCategory} />\r\n      <PrivateRoute path='/bai-viet/chinh-sua/:slug' component={EditPost} />\r\n      <PrivateRoute path='/the-loai' component={Categories} />\r\n      <PrivateRoute path='/bai-viet' component={Posts} />\r\n      <PrivateRoute path='/tao-the-loai' component={CreateCategory} />\r\n      <PrivateRoute path='/tao-bai-viet' component={CreatePost} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\PrivateRoute.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\pages\\Posts.js",["96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ApiBaseURL } from \"../ApiBaseURL\";\r\nimport { getToken } from \"../HandleUser\";\r\n\r\nfunction Posts() {\r\n  // const formatTime = (time) => {\r\n  //   const d = new Date(time);\r\n  //   const result = `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\r\n  //   return result;\r\n  // };\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const getPosts = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: ApiBaseURL(\"post/load?page=1&pageSize=30\"),\r\n    })\r\n      .then((response) => {\r\n        setPosts(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  const deletePost = (event, id) => {\r\n    event.preventDefault();\r\n    event.target.value = \"Loading...\";\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://h3-blog.herokuapp.com/post/delete\",\r\n      headers: {\r\n        token: getToken(),\r\n      },\r\n      data: {\r\n        id: id,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        getPosts();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        event.target.value = \"Xoá\";\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"d-flex align-items-stretch\">\r\n        <Sidebar />\r\n        <div className=\"page-content\">\r\n          {/* Page Header*/}\r\n          <div className=\"page-header no-margin-bottom\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"h5 no-margin-bottom\">Bài viết</h2>\r\n            </div>\r\n          </div>\r\n          {/* Breadcrumb*/}\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/\">Trang chủ</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">Bài viết</li>\r\n            </ul>\r\n          </div>\r\n          <section className=\"no-padding-top\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"block\">\r\n                    <div className=\"title\">\r\n                      <strong>Quản lý bài viết</strong>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table table-striped table-hover\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>#</th>\r\n                            <th>Tiêu đề</th>\r\n                            <th>Hình ảnh</th>\r\n                            <th>Thể loại</th>\r\n                            <th>Hành động</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {posts.map((value, key) => {\r\n                            // console.log(value);\r\n                            return (\r\n                              <tr key={key}>\r\n                                <th scope=\"row\">{key}</th>\r\n                                <td className=\"title\">{value.title}</td>\r\n                                <td  className=\"image\">\r\n                                  <img\r\n                                    src={value.img}\r\n                                    alt={value.title}\r\n                                    className=\"img-fluid\"\r\n                                  />\r\n                                </td>\r\n                                <td>{value.category}</td>\r\n                                <td className=\"actions\">\r\n                                    <Link\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-warning w-100 mb-1\"\r\n                                      to={\r\n                                        \"/bai-viet/chinh-sua/\" + value.nameUrl\r\n                                      }\r\n                                    >\r\n                                      Chỉnh sửa\r\n                                    </Link>\r\n                                    <input\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger w-100 mt-2\"\r\n                                      onClick={(event) => {\r\n                                        deletePost(event, value.id);\r\n                                      }}\r\n                                      value=\"Xoá\"\r\n                                    />\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                      <Link\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary mr-3\"\r\n                        to=\"/tao-bai-viet\"\r\n                      >\r\n                        Thêm bài viết mới\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\pages\\CreatePost.js",["98"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ApiBaseURL } from \"../ApiBaseURL\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { getToken } from \"../HandleUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction CreatePost() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [content, setContent] = useState(null);\r\n  let formData = new FormData();\r\n  const { from } = { from: { pathname: \"/bai-viet\" } };\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const errorMessage = (error) => {\r\n    return <small className=\"error\">{error}</small>;\r\n  };\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n  const thumbs = files.map((file) => {\r\n    console.log(file);\r\n    return (\r\n      <div key={file.name}>\r\n        <img className=\"img-fluid mt-3\" src={file.preview} />\r\n      </div>\r\n    );\r\n  });\r\n  useEffect(() => {\r\n    files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  const height = 500;\r\n  const menubar = false;\r\n  const plugins = \"link image code table fullscreen hr lists\";\r\n  const toolbar =\r\n    \"fontselect fontsizeselect formatselect | \" +\r\n    \"bold italic underline strikethrough subscript superscript | \" +\r\n    \"blockquote removeformat | forecolor backcolor | \" +\r\n    \"alignleft aligncenter alignright alignjustify | \" +\r\n    \"indent outdent | numlist bullist | \" +\r\n    \"link unlink | hr table image | fullscreen code | undo redo\";\r\n  const handleEditorChange = (event) => {\r\n    setContent(event.target.getContent());\r\n  };\r\n  const getCategories = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: ApiBaseURL(\"category/load\"),\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        setCategories(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n  const onSubmit = (values) => {\r\n    setLoading(true);\r\n    formData.append(\"title\", values.title);\r\n    formData.append(\"image\", files[0]);\r\n    formData.append(\"category\", values.category);\r\n    formData.append(\"tags\", values.category);\r\n    formData.append(\"summary\", values.summary);\r\n    formData.append(\"content\", content);\r\n    axios({\r\n      method: \"post\",\r\n      url: ApiBaseURL(\"post/create\"),\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        token: getToken(),\r\n      },\r\n      data: formData,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setLoading(false);\r\n        setRedirect(true);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"d-flex align-items-stretch\">\r\n        {/* Sidebar Navigation Start Here */}\r\n        <Sidebar />\r\n        {/* Sidebar Navigation End Here*/}\r\n        <div className=\"page-content\">\r\n          {/* Page Header*/}\r\n          <div className=\"page-header no-margin-bottom\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"h5 no-margin-bottom\">Tạo bài viết</h2>\r\n            </div>\r\n          </div>\r\n          {/* Breadcrumb*/}\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/admin\">Trang chủ</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">Tạo bài viết</li>\r\n            </ul>\r\n          </div>\r\n          <section className=\"no-padding-top\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {/* Form Elements */}\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"block\">\r\n                    <div className=\"title\">\r\n                      <strong>Tạo bài viết mới</strong>\r\n                    </div>\r\n                    <div className=\"block-body\">\r\n                      <form\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tiêu đề\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập tên bài viết (không quá 100 kí tự)\"\r\n                              className=\"form-control\"\r\n                              id=\"title\"\r\n                              name=\"title\"\r\n                              ref={register({\r\n                                required: \"Tiêu đề không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 70,\r\n                                  message: \"Tiêu đề tối đa 70 kí tự.\",\r\n                                },\r\n                              })}\r\n                            />\r\n                            {errors.title && errorMessage(errors.title.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Ảnh bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div\r\n                              {...getRootProps({\r\n                                className: \"dropzone form-control\",\r\n                              })}\r\n                            >\r\n                              <input {...getInputProps()} />\r\n                              <p>\r\n                                Kéo và thả hoặc click vào đây để chọn hình ảnh\r\n                              </p>\r\n                            </div>\r\n                            {errors.image && errorMessage(errors.image.message)}\r\n                            <aside>{thumbs}</aside>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Thể loại\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <select\r\n                              name=\"category\"\r\n                              className=\"form-control\"\r\n                              ref={register({\r\n                                required: \"Thể loại không được để trống.\",\r\n                              })}\r\n                            >\r\n                              <option value=\"\">\r\n                                -- Chọn thể loại bài viết --\r\n                              </option>\r\n                              {categories.map((value, key) => {\r\n                                return (\r\n                                  <option key={key} value={value.name}>\r\n                                    {value.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                            {errors.category &&\r\n                              errorMessage(errors.category.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tóm tắt bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <textarea\r\n                              className=\"form-control h-100\"\r\n                              id=\"summary\"\r\n                              name=\"summary\"\r\n                              rows={5}\r\n                              placeholder=\"Nhập tóm tắt bài viết (không quá 300 kí tự)\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"Tóm tắt bài viết không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 150,\r\n                                  message: \"Tóm tắt bài viết tối đa 150 kí tự.\",\r\n                                },\r\n                              })}\r\n                            ></textarea>\r\n                            {errors.summary &&\r\n                              errorMessage(errors.summary.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row content\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Nội dung bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <Editor\r\n                              id=\"content\"\r\n                              className=\"form-control\"\r\n                              init={{\r\n                                height,\r\n                                menubar,\r\n                                plugins,\r\n                                toolbar,\r\n                                image_title: true,\r\n                                automatic_uploads: true,\r\n                                file_picker_types: \"image\",\r\n                                file_picker_callback: function (\r\n                                  callback,\r\n                                  value,\r\n                                  meta\r\n                                ) {\r\n                                  let input = document.createElement(\"input\");\r\n                                  input.setAttribute(\"type\", \"file\");\r\n                                  input.setAttribute(\"accept\", \"image/*\");\r\n                                  input.onchange = function () {\r\n                                    let file = this.files[0];\r\n                                    let reader = new FileReader();\r\n                                    reader.onload = function (event) {\r\n                                      // let id = \"blobid\" + new Date().getTime();\r\n                                      // let blobCache =\r\n                                      //   window.tinymce.activeEditor.editorUpload\r\n                                      //     .blobCache;\r\n                                      // let base64 = reader.result.split(\",\")[1];\r\n                                      // let blobInfo = blobCache.create(\r\n                                      //   id,\r\n                                      //   file,\r\n                                      //   base64\r\n                                      // );\r\n                                      // blobCache.add(blobInfo);\r\n                                      // callback(blobInfo.blobUri(), {\r\n                                      //   title: file.name,\r\n                                      // });\r\n                                      let formData = new FormData();\r\n                                      formData.append(\"image\", file);\r\n                                      axios({\r\n                                        method: \"post\",\r\n                                        url: ApiBaseURL(\"upload\"),\r\n                                        headers: {\r\n                                          \"Content-Type\": \"multipart/form-data\",\r\n                                          token: getToken(),\r\n                                        },\r\n                                        data: formData,\r\n                                      })\r\n                                        .then((response) => {\r\n                                          callback(response.data.link, {\r\n                                            title: file.name,\r\n                                          });\r\n                                        })\r\n                                        .catch((error) => {\r\n                                          console.log(error);\r\n                                        });\r\n                                    };\r\n                                    reader.readAsDataURL(file);\r\n                                  };\r\n                                  input.click();\r\n                                },\r\n                              }}\r\n                              onChange={(event) => {\r\n                                handleEditorChange(event);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <div className=\"col-sm-10 ml-auto\">\r\n                            <input\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-3\"\r\n                              value={loading ? \"Loading...\" : \"Tạo bài viết\"}\r\n                              disabled={loading}\r\n                            />\r\n                            <Link\r\n                              type=\"button\"\r\n                              className=\"btn btn btn-secondary\"\r\n                              to=\"/bai-viet\"\r\n                            >\r\n                              Huỷ bỏ\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\pages\\CreateCategory.js",["99","100","101"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { getToken } from \"../HandleUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction CreateCategory() {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { from } = { from: { pathname: \"/the-loai\" } };\r\n  const [redirect, setRedirect] = useState(false);\r\n  const errorMessage = (error) => {\r\n    return <small className=\"error\">{error}</small>;\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  const onSubmit = (values) => {\r\n    setError(null);\r\n    setLoading(true);\r\n    console.log(values.name);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://h3-blog.herokuapp.com/category/create\",\r\n      headers: {\r\n        token: getToken(),\r\n      },\r\n      data: {\r\n        name: values.name,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setRedirect(true);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"d-flex align-items-stretch\">\r\n        {/* Sidebar Navigation Start Here */}\r\n        <Sidebar />\r\n        {/* Sidebar Navigation End Here*/}\r\n        <div className=\"page-content\">\r\n          {/* Page Header*/}\r\n          <div className=\"page-header no-margin-bottom\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"h5 no-margin-bottom\">Tạo thể loại</h2>\r\n            </div>\r\n          </div>\r\n          {/* Breadcrumb*/}\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/admin\">Trang chủ</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">Tạo thể loại</li>\r\n            </ul>\r\n          </div>\r\n          <section className=\"no-padding-top\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {/* Form Elements */}\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"block\">\r\n                    <div className=\"title\">\r\n                      <strong>Tạo thể loại mới</strong>\r\n                    </div>\r\n                    <div className=\"block-body\">\r\n                      <form\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tên thể loại\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập tên bài viết (không quá 30 kí tự)\"\r\n                              className=\"form-control\"\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              ref={register({\r\n                                required: \"Tên thể loại không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 20,\r\n                                  message: \"Tên thể loại tối đa 20 kí tự.\",\r\n                                },\r\n                              })}\r\n                            />\r\n                            {errors.name && errorMessage(errors.name.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        {/* <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Thể loại\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <select\r\n                              name=\"account\"\r\n                              className=\"form-control mb-3 mb-3\"\r\n                            >\r\n                              <option>Option 1</option>\r\n                              <option>Option 2</option>\r\n                              <option>Option 3</option>\r\n                              <option>Option 4</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" /> */}\r\n                        <div className=\"form-group row\">\r\n                          <div className=\"col-sm-10 ml-auto\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-3\"\r\n                            >\r\n                              Tạo thể loại\r\n                            </button>\r\n                            <Link\r\n                              type=\"submit\"\r\n                              className=\"btn btn btn-secondary\"\r\n                              to=\"/the-loai\"\r\n                            >\r\n                              Huỷ bỏ\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateCategory;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Categories.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\pages\\EditCategory.js",["102","103","104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { getToken } from \"../HandleUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { ApiBaseURL } from \"../ApiBaseURL\";\r\nfunction EditCategory(props) {\r\n  const { handleSubmit, register, errors, control } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const { from } = { from: { pathname: \"/the-loai\" } };\r\n  const [redirect, setRedirect] = useState(false);\r\n  const errorMessage = (error) => {\r\n    return <small className=\"error\">{error}</small>;\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  const onSubmit = (values) => {\r\n    setLoading(true);\r\n    axios({\r\n      method: \"post\",\r\n      url: ApiBaseURL(\"category/update\"),\r\n      headers: {\r\n        token: getToken(),\r\n      },\r\n      data: {\r\n        id: props.location.params.id,\r\n        name: values.name,\r\n        status: values.status,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setRedirect(true);\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"d-flex align-items-stretch\">\r\n        {/* Sidebar Navigation Start Here */}\r\n        <Sidebar />\r\n        {/* Sidebar Navigation End Here*/}\r\n        <div className=\"page-content\">\r\n          {/* Page Header*/}\r\n          <div className=\"page-header no-margin-bottom\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"h5 no-margin-bottom\">Chỉnh sửa thể loại</h2>\r\n            </div>\r\n          </div>\r\n          {/* Breadcrumb*/}\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/admin\">Trang chủ</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">Chỉnh sửa thể loại</li>\r\n            </ul>\r\n          </div>\r\n          <section className=\"no-padding-top\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {/* Form Elements */}\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"block\">\r\n                    <div className=\"title\">\r\n                      <strong>Chỉnh sửa thể loại</strong>\r\n                    </div>\r\n                    <div className=\"block-body\">\r\n                      <form\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tên thể loại\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập tên thể loại (không quá 30 kí tự)\"\r\n                              className=\"form-control\"\r\n                              id=\"name\"\r\n                              name=\"name\"\r\n                              defaultValue={props.location.params.name}\r\n                              ref={register({\r\n                                required: \"Tên thể loại không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 20,\r\n                                  message: \"Tên thể loại tối đa 20 kí tự.\",\r\n                                },\r\n                              })}\r\n                            />\r\n                            {errors.name && errorMessage(errors.name.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        {/* <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 form-control-label\">\r\n                          Thể loại\r\n                        </label>\r\n                        <div className=\"col-sm-10\">\r\n                          <select\r\n                            name=\"account\"\r\n                            className=\"form-control mb-3 mb-3\"\r\n                          >\r\n                            <option>Option 1</option>\r\n                            <option>Option 2</option>\r\n                            <option>Option 3</option>\r\n                            <option>Option 4</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"line\" /> */}\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Trạng thái\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <input\r\n                              id=\"available\"\r\n                              type=\"radio\"\r\n                              defaultValue=\"available\"\r\n                              defaultChecked={\r\n                                props.location.params.status === \"available\"\r\n                              }\r\n                              name=\"status\"\r\n                              className=\"radio-template\"\r\n                              ref={register}\r\n                            />\r\n                            <label htmlFor=\"available\" className=\"mr-5\">\r\n                              Khả dụng\r\n                            </label>\r\n                            <input\r\n                              id=\"blocked\"\r\n                              type=\"radio\"\r\n                              defaultValue=\"blocked\"\r\n                              defaultChecked={\r\n                                props.location.params.status === \"blocked\"\r\n                              }\r\n                              name=\"status\"\r\n                              className=\"radio-template\"\r\n                              ref={register}\r\n                            />\r\n                            <label htmlFor=\"blocked\">Bị khoá</label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <div className=\"col-sm-10 ml-auto\">\r\n                            <input\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-3\"\r\n                              value={\r\n                                loading ? \"Loading...\" : \"Cập nhật thể loại\"\r\n                              }\r\n                              disabled={loading}\r\n                            />\r\n                            <Link\r\n                              className=\"btn btn btn-secondary\"\r\n                              to=\"/the-loai\"\r\n                            >\r\n                              Huỷ bỏ\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEditCategory.propTypes = {};\r\n\r\nexport default EditCategory;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\pages\\Login.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\pages\\Home.js",["106"],"import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Footer from '../components/Footer';\r\nimport { ApiBaseURL } from '../ApiBaseURL';\r\nconst axios = require('axios').default;\r\n\r\nfunction Home() {\r\n  let url = ApiBaseURL('report/load');\r\n  const [report, setReport] = useState({\r\n    userNumber: 0,\r\n    views: 0,\r\n    postNumber: 0,\r\n  });\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response.data);\r\n        setReport(response.data);\r\n      })\r\n      .catch((errors) => {});\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className='d-flex align-items-stretch'>\r\n        {/* Sidebar Navigation Start Here */}\r\n        <Sidebar />\r\n        {/* Sidebar Navigation End Here*/}\r\n        <div className='page-content'>\r\n          <div className='page-header'>\r\n            <div className='container-fluid'>\r\n              <h2 className='h5 no-margin-bottom'>Dashboard</h2>\r\n            </div>\r\n          </div>\r\n          <section className='no-padding-top no-padding-bottom'>\r\n            <div className='container-fluid'>\r\n              <div className='row'>\r\n                <div className='col-md-3 col-sm-6'>\r\n                  <div className='statistic-block block'>\r\n                    <div className='progress-details d-flex align-items-end justify-content-between'>\r\n                      <div className='title'>\r\n                        <div className='icon'>\r\n                          <i className='icon-user-1' />\r\n                        </div>\r\n                        <strong>Số lượng User</strong>\r\n                      </div>\r\n                      <div className='number dashtext-1'>\r\n                        {report.userNumber}\r\n                      </div>\r\n                    </div>\r\n                    <div className='progress progress-template'>\r\n                      <div\r\n                        role='progressbar'\r\n                        style={{ width: '30%' }}\r\n                        aria-valuenow={30}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className='progress-bar progress-bar-template dashbg-1'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-3 col-sm-6'>\r\n                  <div className='statistic-block block'>\r\n                    <div className='progress-details d-flex align-items-end justify-content-between'>\r\n                      <div className='title'>\r\n                        <div className='icon'>\r\n                          <i className='icon-contract' />\r\n                        </div>\r\n                        <strong>Tổng số bài viết</strong>\r\n                      </div>\r\n                      <div className='number dashtext-2'>\r\n                        {report.postNumber}\r\n                      </div>\r\n                    </div>\r\n                    <div className='progress progress-template'>\r\n                      <div\r\n                        role='progressbar'\r\n                        style={{ width: '70%' }}\r\n                        aria-valuenow={70}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className='progress-bar progress-bar-template dashbg-2'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-3 col-sm-6'>\r\n                  <div className='statistic-block block'>\r\n                    <div className='progress-details d-flex align-items-end justify-content-between'>\r\n                      <div className='title'>\r\n                        <div className='icon'>\r\n                          <i className='icon-paper-and-pencil' />\r\n                        </div>\r\n                        <strong>New Invoices</strong>\r\n                      </div>\r\n                      <div className='number dashtext-3'>140</div>\r\n                    </div>\r\n                    <div className='progress progress-template'>\r\n                      <div\r\n                        role='progressbar'\r\n                        style={{ width: '55%' }}\r\n                        aria-valuenow={55}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className='progress-bar progress-bar-template dashbg-3'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-3 col-sm-6'>\r\n                  <div className='statistic-block block'>\r\n                    <div className='progress-details d-flex align-items-end justify-content-between'>\r\n                      <div className='title'>\r\n                        <div className='icon'>\r\n                          <i className='icon-writing-whiteboard' />\r\n                        </div>\r\n                        <strong>Tổng views</strong>\r\n                      </div>\r\n                      <div className='number dashtext-4'>{report.views}</div>\r\n                    </div>\r\n                    <div className='progress progress-template'>\r\n                      <div\r\n                        role='progressbar'\r\n                        style={{ width: '35%' }}\r\n                        aria-valuenow={35}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className='progress-bar progress-bar-template dashbg-4'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className='no-padding-bottom'>\r\n            <div className='container-fluid'>\r\n              <div className='row'>\r\n                <div className='col-lg-12'>\r\n                  <div className='stats-2-block block d-flex'>\r\n                    <div className='stats-2 d-flex'>\r\n                      <div className='stats-2-arrow low'>\r\n                        <i className='fa fa-caret-down' />\r\n                      </div>\r\n                      <div className='stats-2-content'>\r\n                        <strong className='d-block'>5.657</strong>\r\n                        <span className='d-block'>Standard Scans</span>\r\n                        <div className='progress progress-template progress-small'>\r\n                          <div\r\n                            role='progressbar'\r\n                            style={{ width: '60%' }}\r\n                            aria-valuenow={30}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            className='progress-bar progress-bar-template progress-bar-small dashbg-2'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='stats-2 d-flex'>\r\n                      <div className='stats-2-arrow height'>\r\n                        <i className='fa fa-caret-up' />\r\n                      </div>\r\n                      <div className='stats-2-content'>\r\n                        <strong className='d-block'>3.1459</strong>\r\n                        <span className='d-block'>Team Scans</span>\r\n                        <div className='progress progress-template progress-small'>\r\n                          <div\r\n                            role='progressbar'\r\n                            style={{ width: '35%' }}\r\n                            aria-valuenow={30}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            className='progress-bar progress-bar-template progress-bar-small dashbg-3'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='stats-3-block block d-flex'>\r\n                    <div className='stats-3'>\r\n                      <strong className='d-block'>745</strong>\r\n                      <span className='d-block'>Total requests</span>\r\n                      <div className='progress progress-template progress-small'>\r\n                        <div\r\n                          role='progressbar'\r\n                          style={{ width: '35%' }}\r\n                          aria-valuenow={30}\r\n                          aria-valuemin={0}\r\n                          aria-valuemax={100}\r\n                          className='progress-bar progress-bar-template progress-bar-small dashbg-1'\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className='stats-3 d-flex justify-content-between text-center'>\r\n                      <div className='item'>\r\n                        <strong className='d-block strong-sm'>4.124</strong>\r\n                        <span className='d-block span-sm'>Threats</span>\r\n                        <div className='line' />\r\n                        <small>+246</small>\r\n                      </div>\r\n                      <div className='item'>\r\n                        <strong className='d-block strong-sm'>2.147</strong>\r\n                        <span className='d-block span-sm'>Neutral</span>\r\n                        <div className='line' />\r\n                        <small>+416</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\pages\\EditPost.js",["107","108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ApiBaseURL } from \"../ApiBaseURL\";\r\nimport { Redirect, Link, useParams } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { getToken } from \"../HandleUser\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction EditPost() {\r\n  let { slug } = useParams();\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [content, setContent] = useState(null);\r\n  var formData = new FormData();\r\n  const { from } = { from: { pathname: \"/bai-viet\" } };\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [post, setPost] = useState([]);\r\n  const [originalImg, setOriginalImg] = useState();\r\n  const [category, setCategory] = useState();\r\n  const errorMessage = (error) => {\r\n    return <small className=\"error\">{error}</small>;\r\n  };\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      setOriginalImg(null);\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n  const originalThumbs = () => {\r\n    if (originalImg) {\r\n      return (\r\n        <aside>\r\n          <div>\r\n            <img className=\"img-fluid mt-3\" src={originalImg} />\r\n          </div>\r\n        </aside>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const thumbs = files.map((file) => {\r\n    return (\r\n      <div key={file.name}>\r\n        <img className=\"img-fluid mt-3\" src={file.preview} />\r\n      </div>\r\n    );\r\n  });\r\n  useEffect(() => {\r\n    files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  const height = 500;\r\n  const menubar = false;\r\n  const plugins = \"link image code table fullscreen hr lists\";\r\n  const toolbar =\r\n    \"fontselect fontsizeselect formatselect | \" +\r\n    \"bold italic underline strikethrough subscript superscript | \" +\r\n    \"blockquote removeformat | forecolor backcolor | \" +\r\n    \"alignleft aligncenter alignright alignjustify | \" +\r\n    \"indent outdent | numlist bullist | \" +\r\n    \"link unlink | hr table image | fullscreen code | undo redo\";\r\n  const handleEditorChange = (event) => {\r\n    setContent(event.target.getContent());\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  const getCategories = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: ApiBaseURL(\"category/load\"),\r\n    })\r\n      .then((response) => {\r\n        setCategories(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getPost = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: ApiBaseURL(\"post/load/\" + slug),\r\n    })\r\n      .then((response) => {\r\n        setPost(response.data);\r\n        setOriginalImg(response.data.img);\r\n        setCategory(response.data.category);\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCategories();\r\n    getPost();\r\n  }, []);\r\n  const onSubmit = (values) => {\r\n    setLoading(true);\r\n    formData.append(\"title\", values.title);\r\n    formData.append(\"image\", files[0]);\r\n    formData.append(\"category\", values.category);\r\n    formData.append(\"tags\", values.category);\r\n    formData.append(\"summary\", values.summary);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"id\", post.id);\r\n    axios({\r\n      method: \"post\",\r\n      url: ApiBaseURL(\"post/update\"),\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        token: getToken(),\r\n      },\r\n      data: formData,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setLoading(false);\r\n        setRedirect(true);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n  if (redirect) {\r\n    return <Redirect to={from} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"d-flex align-items-stretch\">\r\n        {/* Sidebar Navigation Start Here */}\r\n        <Sidebar />\r\n        {/* Sidebar Navigation End Here*/}\r\n        <div className=\"page-content\">\r\n          {/* Page Header*/}\r\n          <div className=\"page-header no-margin-bottom\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"h5 no-margin-bottom\">Tạo bài viết</h2>\r\n            </div>\r\n          </div>\r\n          {/* Breadcrumb*/}\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/admin\">Trang chủ</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">Tạo bài viết</li>\r\n            </ul>\r\n          </div>\r\n          <section className=\"no-padding-top\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {/* Form Elements */}\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"block\">\r\n                    <div className=\"title\">\r\n                      <strong>Tạo bài viết mới</strong>\r\n                    </div>\r\n                    <div className=\"block-body\">\r\n                      <form\r\n                        className=\"form-horizontal\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tiêu đề\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Nhập tên bài viết (không quá 100 kí tự)\"\r\n                              className=\"form-control\"\r\n                              id=\"title\"\r\n                              name=\"title\"\r\n                              ref={register({\r\n                                required: \"Tiêu đề không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 70,\r\n                                  message: \"Tiêu đề tối đa 70 kí tự.\",\r\n                                },\r\n                              })}\r\n                              defaultValue={post.title}\r\n                            />\r\n                            {errors.title && errorMessage(errors.title.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Ảnh bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <div\r\n                              {...getRootProps({\r\n                                className: \"dropzone form-control\",\r\n                              })}\r\n                            >\r\n                              <input {...getInputProps()} />\r\n                              <p>\r\n                                Kéo và thả hoặc click vào đây để chọn hình ảnh\r\n                              </p>\r\n                            </div>\r\n                            {errors.image && errorMessage(errors.image.message)}\r\n                            <aside>{thumbs}</aside>\r\n                            {originalThumbs()}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Thể loại\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <select\r\n                              name=\"category\"\r\n                              className=\"form-control\"\r\n                              ref={register({\r\n                                required: \"Thể loại không được để trống.\",\r\n                              })}\r\n                              value={category}\r\n                              onChange={(event) => {\r\n                                handleCategoryChange(event);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">\r\n                                -- Chọn thể loại bài viết --\r\n                              </option>\r\n                              {categories.map((value, key) => {\r\n                                return (\r\n                                  <option key={key} value={value.name}>\r\n                                    {value.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                            {errors.category &&\r\n                              errorMessage(errors.category.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Tóm tắt bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <textarea\r\n                              className=\"form-control h-100\"\r\n                              id=\"summary\"\r\n                              name=\"summary\"\r\n                              rows={5}\r\n                              placeholder=\"Nhập tóm tắt bài viết (không quá 300 kí tự)\"\r\n                              ref={register({\r\n                                required:\r\n                                  \"Tóm tắt bài viết không được để trống.\",\r\n                                maxLength: {\r\n                                  value: 150,\r\n                                  message: \"Tóm tắt bài viết tối đa 150 kí tự.\",\r\n                                },\r\n                              })}\r\n                              defaultValue={post.summary}\r\n                            ></textarea>\r\n                            {errors.summary &&\r\n                              errorMessage(errors.summary.message)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row content\">\r\n                          <label className=\"col-sm-2 form-control-label\">\r\n                            Nội dung bài viết\r\n                          </label>\r\n                          <div className=\"col-sm-10\">\r\n                            <Editor\r\n                              id=\"content\"\r\n                              className=\"form-control\"\r\n                              init={{\r\n                                height,\r\n                                menubar,\r\n                                plugins,\r\n                                toolbar,\r\n                                image_title: true,\r\n                                automatic_uploads: true,\r\n                                file_picker_types: \"image\",\r\n                                file_picker_callback: function (\r\n                                  callback,\r\n                                  value,\r\n                                  meta\r\n                                ) {\r\n                                  var input = document.createElement(\"input\");\r\n                                  input.setAttribute(\"type\", \"file\");\r\n                                  input.setAttribute(\"accept\", \"image/*\");\r\n                                  input.onchange = function () {\r\n                                    var file = this.files[0];\r\n                                    var reader = new FileReader();\r\n                                    reader.onload = function (event) {\r\n                                      var id = \"blobid\" + new Date().getTime();\r\n                                      var blobCache =\r\n                                        window.tinymce.activeEditor.editorUpload\r\n                                          .blobCache;\r\n                                      var base64 = reader.result.split(\",\")[1];\r\n                                      var blobInfo = blobCache.create(\r\n                                        id,\r\n                                        file,\r\n                                        base64\r\n                                      );\r\n                                      blobCache.add(blobInfo);\r\n                                      callback(blobInfo.blobUri(), {\r\n                                        title: file.name,\r\n                                      });\r\n                                    };\r\n                                    reader.readAsDataURL(file);\r\n                                  };\r\n                                  input.click();\r\n                                },\r\n                              }}\r\n                              onChange={(event) => {\r\n                                handleEditorChange(event);\r\n                              }}\r\n                              value={post.content}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"line\" />\r\n                        <div className=\"form-group row\">\r\n                          <div className=\"col-sm-10 ml-auto\">\r\n                            <input\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-3\"\r\n                              value={loading ? \"Loading...\" : \"Cập nhật bài viết\"}\r\n                              disabled={loading}\r\n                            />\r\n                            <Link\r\n                              type=\"button\"\r\n                              className=\"btn btn btn-secondary\"\r\n                              to=\"/bai-viet\"\r\n                            >\r\n                              Huỷ bỏ\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPost;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\ApiBaseURL.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\HandleUser.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\components\\Footer.js",[],"D:\\Documents\\Git\\triplehadmin\\src\\components\\Header.js",["110","111"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { getToken, removeUserSession } from \"../HandleUser\";\r\nimport { ApiBaseURL } from \"../ApiBaseURL\";\r\n\r\nfunction Header() {\r\n  const { from } = { from: { pathname: \"/dang-nhap\" } };\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to={from} />;\r\n  }\r\n\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    axios({\r\n      method: \"post\",\r\n      url: ApiBaseURL(\"user/logout\"),\r\n      data: {\r\n        token: getToken()\r\n      }\r\n    })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        removeUserSession();\r\n        setRedirect(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"search-panel\">\r\n            <div className=\"search-inner d-flex align-items-center justify-content-center\">\r\n              <div className=\"close-btn\">\r\n                Close <i className=\"fa fa-close\" />\r\n              </div>\r\n              <form id=\"searchForm\" action=\"#\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"search\"\r\n                    name=\"search\"\r\n                    placeholder=\"What are you searching for...\"\r\n                  />\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid d-flex align-items-center justify-content-between\">\r\n            <div className=\"navbar-header\">\r\n              {/* Navbar Header Start Here */}\r\n              <Link to=\"/\" className=\"navbar-brand\">\r\n                <div className=\"brand-text brand-big visible text-uppercase\">\r\n                  <strong className=\"text-primary\">Dark</strong>\r\n                  <strong>Admin</strong>\r\n                </div>\r\n                <div className=\"brand-text brand-sm\">\r\n                  <strong className=\"text-primary\">D</strong>\r\n                  <strong>A</strong>\r\n                </div>\r\n              </Link>\r\n              {/* Sidebar Toggle Button */}\r\n              <button className=\"sidebar-toggle\">\r\n                <i className=\"fa fa-long-arrow-left\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"right-menu list-inline no-margin-bottom\">\r\n              <div className=\"list-inline-item\">\r\n                <a href=\"#!\" className=\"search-open nav-link\">\r\n                  <i className=\"icon-magnifying-glass-browser\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"list-inline-item dropdown\">\r\n                <a\r\n                  id=\"navbarDropdownMenuLink1\"\r\n                  href=\"http://example.com\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                  className=\"nav-link messages-toggle\"\r\n                >\r\n                  <i className=\"icon-email\" />\r\n                  <span className=\"badge dashbg-1\">5</span>\r\n                </a>\r\n                <div\r\n                  aria-labelledby=\"navbarDropdownMenuLink1\"\r\n                  className=\"dropdown-menu messages\"\r\n                >\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"dropdown-item message d-flex align-items-center\"\r\n                  >\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src=\"img/avatar-3.jpg\"\r\n                        alt=\"...\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <div className=\"status online\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <strong className=\"d-block\">Nadia Halsey</strong>\r\n                      <span className=\"d-block\">\r\n                        lorem ipsum dolor sit amit\r\n                      </span>\r\n                      <small className=\"date d-block\">9:30am</small>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"dropdown-item message d-flex align-items-center\"\r\n                  >\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src=\"img/avatar-2.jpg\"\r\n                        alt=\"...\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <div className=\"status away\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <strong className=\"d-block\">Peter Ramsy</strong>\r\n                      <span className=\"d-block\">\r\n                        lorem ipsum dolor sit amit\r\n                      </span>\r\n                      <small className=\"date d-block\">7:40am</small>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"dropdown-item message d-flex align-items-center\"\r\n                  >\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src=\"img/avatar-1.jpg\"\r\n                        alt=\"...\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <div className=\"status busy\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <strong className=\"d-block\">Sam Kaheil</strong>\r\n                      <span className=\"d-block\">\r\n                        lorem ipsum dolor sit amit\r\n                      </span>\r\n                      <small className=\"date d-block\">6:55am</small>\r\n                    </div>\r\n                  </a>\r\n                  <a\r\n                    href=\"#!\"\r\n                    className=\"dropdown-item message d-flex align-items-center\"\r\n                  >\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src=\"img/avatar-5.jpg\"\r\n                        alt=\"...\"\r\n                        className=\"img-fluid\"\r\n                      />\r\n                      <div className=\"status offline\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <strong className=\"d-block\">Sara Wood</strong>\r\n                      <span className=\"d-block\">\r\n                        lorem ipsum dolor sit amit\r\n                      </span>\r\n                      <small className=\"date d-block\">10:30pm</small>\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item text-center message\">\r\n                    <strong>\r\n                      See All Messages <i className=\"fa fa-angle-right\" />\r\n                    </strong>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              {/* Tasks Start Here */}\r\n              <div className=\"list-inline-item dropdown\">\r\n                <a\r\n                  id=\"navbarDropdownMenuLink2\"\r\n                  href=\"http://example.com\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                  className=\"nav-link tasks-toggle\"\r\n                >\r\n                  <i className=\"icon-new-file\" />\r\n                  <span className=\"badge dashbg-3\">9</span>\r\n                </a>\r\n                <div\r\n                  aria-labelledby=\"navbarDropdownMenuLink2\"\r\n                  className=\"dropdown-menu tasks-list\"\r\n                >\r\n                  <a href=\"#!\" className=\"dropdown-item\">\r\n                    <div className=\"text d-flex justify-content-between\">\r\n                      <strong>Task 1</strong>\r\n                      <span>40% complete</span>\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"40%\" }}\r\n                        aria-valuenow={40}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className=\"progress-bar dashbg-1\"\r\n                      />\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item\">\r\n                    <div className=\"text d-flex justify-content-between\">\r\n                      <strong>Task 2</strong>\r\n                      <span>20% complete</span>\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"20%\" }}\r\n                        aria-valuenow={20}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className=\"progress-bar dashbg-3\"\r\n                      />\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item\">\r\n                    <div className=\"text d-flex justify-content-between\">\r\n                      <strong>Task 3</strong>\r\n                      <span>70% complete</span>\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"70%\" }}\r\n                        aria-valuenow={70}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className=\"progress-bar dashbg-2\"\r\n                      />\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item\">\r\n                    <div className=\"text d-flex justify-content-between\">\r\n                      <strong>Task 4</strong>\r\n                      <span>30% complete</span>\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"30%\" }}\r\n                        aria-valuenow={30}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className=\"progress-bar dashbg-4\"\r\n                      />\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item\">\r\n                    <div className=\"text d-flex justify-content-between\">\r\n                      <strong>Task 5</strong>\r\n                      <span>65% complete</span>\r\n                    </div>\r\n                    <div className=\"progress\">\r\n                      <div\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"65%\" }}\r\n                        aria-valuenow={65}\r\n                        aria-valuemin={0}\r\n                        aria-valuemax={100}\r\n                        className=\"progress-bar dashbg-1\"\r\n                      />\r\n                    </div>\r\n                  </a>\r\n                  <a href=\"#!\" className=\"dropdown-item text-center\">\r\n                    <strong>\r\n                      See All Tasks <i className=\"fa fa-angle-right\" />\r\n                    </strong>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              {/* Tasks End Here*/}\r\n\r\n              {/* Logout Start Here */}\r\n              <div className=\"list-inline-item logout\">\r\n                <a\r\n                  id=\"logout\"\r\n                  type=\"button\"\r\n                  className=\"nav-link\"\r\n                  href=\"#!\"\r\n                  onClick={(event) => {\r\n                    logout(event);\r\n                  }}\r\n                >\r\n                  Đăng xuất <i className=\"icon-logout\" />\r\n                </a>\r\n              </div>\r\n              {/* Logout End Here */}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\components\\Sidebar.js",["112","113","114","115"],"import React from \"react\";\r\nimport { Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport CustomLink from \"../CustomLink\";\r\nimport { getName } from \"../HandleUser\";\r\n\r\nfunction Sidebar() {\r\n  const nameUser = getName();\r\n  return (\r\n    <nav id=\"sidebar\">\r\n      {/* Sidebar Header*/}\r\n      <div className=\"sidebar-header d-flex align-items-center\">\r\n        <div className=\"avatar\">\r\n          <img\r\n            src=\"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\"\r\n            className=\"img-fluid rounded-circle\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"title\">\r\n          <h1 className=\"h5\">{nameUser}</h1>\r\n          <p>Web Developer</p>\r\n        </div>\r\n      </div>\r\n      {/* Sidebar Navidation Menus*/}\r\n      <span className=\"heading\">Menu</span>\r\n      <ul className=\"list-unstyled\">\r\n        <CustomLink\r\n          activeOnlyWhenExact={true}\r\n          to=\"/\"\r\n          label={[<i key={1} className=\"icon-home\" />, \"Trang chủ\"]}\r\n        />\r\n        <CustomLink\r\n          to=\"/the-loai\"\r\n          label={[<i key={2} className=\"icon-grid\" />, \"Thể loại\"]}\r\n        />\r\n        <CustomLink\r\n          to=\"/bai-viet\"\r\n          label={[<i key={3} className=\"icon-paper-and-pencil\" />, \"Bài viết\"]}\r\n        />\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Documents\\Git\\triplehadmin\\src\\CustomLink.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":29},{"ruleId":"120","severity":1,"message":"124","line":2,"column":31,"nodeType":"122","messageId":"123","endLine":2,"endColumn":44},{"ruleId":"120","severity":1,"message":"125","line":17,"column":10,"nodeType":"122","messageId":"123","endLine":17,"endColumn":17},{"ruleId":"120","severity":1,"message":"126","line":17,"column":19,"nodeType":"122","messageId":"123","endLine":17,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":44,"column":9,"nodeType":"129","endLine":44,"endColumn":62},{"ruleId":"120","severity":1,"message":"130","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":17},{"ruleId":"120","severity":1,"message":"131","line":15,"column":10,"nodeType":"122","messageId":"123","endLine":15,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"133","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"134","line":10,"column":19,"nodeType":"122","messageId":"123","endLine":10,"endColumn":29},{"ruleId":"120","severity":1,"message":"135","line":13,"column":43,"nodeType":"122","messageId":"123","endLine":13,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":26,"column":6,"nodeType":"138","endLine":26,"endColumn":8,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"128","line":49,"column":13,"nodeType":"129","endLine":49,"endColumn":65},{"ruleId":"127","severity":1,"message":"128","line":60,"column":9,"nodeType":"129","endLine":60,"endColumn":62},{"ruleId":"136","severity":1,"message":"140","line":114,"column":6,"nodeType":"138","endLine":114,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":81,"column":17,"nodeType":"129","endLine":88,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":185,"column":17,"nodeType":"129","endLine":192,"endColumn":18},{"ruleId":"120","severity":1,"message":"144","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"145","line":2,"column":18,"nodeType":"122","messageId":"123","endLine":2,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":2,"column":25,"nodeType":"122","messageId":"123","endLine":2,"endColumn":29},{"ruleId":"120","severity":1,"message":"124","line":2,"column":31,"nodeType":"122","messageId":"123","endLine":2,"endColumn":44},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Editor' is defined but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'Controller' is defined but never used.","'control' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["149"],"jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [url]",{"range":"154","text":"155"},"Update the dependencies array to be: [getPost]",{"range":"156","text":"157"},[728,730],"[url]",[3479,3481],"[getPost]"]